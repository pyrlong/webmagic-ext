{"title":{"text":"<h2 id=\"t_58ae76e80100kyt6\" class=\"titName SG_txta\">Java中的内存泄露</h2>"},"content":{"text":"<div id=\"sina_keyword_ad_area2\" class=\"articalContent  \">\n  http://www.ibm.com/developerworks/cn/java/l-JavaMemoryLeak/#4\n <br /> 这篇IBM的文章讲的很全，如果面试时问到，如何总结？\n <br /> 问：Java的垃圾收集器如何工作的？\n <br /> 答：Java垃圾收集器采用有向图。从堆区引用开始，每个引用可以看成一条有向边，有向边从引用者指向被引用对象。如果一个对象从开始节点不可达，那么进行回收。对比COM+使用的计数机制，GC可以很好的解决环问题。\n <br /> 问：Java有内存泄露吗？\n <br /> 答：C++的内存泄露是说申请了变量，在程序结束之前没有释放该变量。因为Java的GC保证了所有对象都可达，所以不存在C++意义上的内存泄露。但是1、GC是隔一段时间才运行的，所以短时间内可能存在；2、程序编写时可能保存了一些无用的引用，它指向的对象是无用的（程序不需要再用到），但是这些对象GC是没法回收的，所以Java虽然没有不可达对象，但是仍然会出现内存占用持续增长的问题。有人也认为这是Java中的内存泄露。\n <br /> 贴个内存泄露的定义：\n <br /> Memory leak\n <br /> A \n <b>memory leak</b> or \n <b>leakage</b> in \n <a href=\"http://en.wikipedia.org/wiki/Computer_science\" title=\"Computer science\">computer science</a> occurs when a \n <a href=\"http://en.wikipedia.org/wiki/Computer_program\" title=\"Computer program\">computer program</a> consumes \n <a href=\"http://en.wikipedia.org/wiki/Dynamic_memory\" title=\"Dynamic memory\">memory</a> but is unable to release it back to the operating system. A memory leak has symptoms similar to a number of other problems (see below) and generally can only be diagnosed by a programmer with access to the program \n <a href=\"http://en.wikipedia.org/wiki/Source_code\" title=\"Source code\">source code</a>; however, many people refer to \n <i>any</i> unwanted increase in memory usage as a memory leak, though this is not strictly accurate.\n <br /> \n</div>"},"date":{"text":"2010-09-02 16:17:51"}}