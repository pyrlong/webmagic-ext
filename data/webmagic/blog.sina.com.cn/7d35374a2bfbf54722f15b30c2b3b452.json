{"title":{"text":"<h2 id=\"t_58ae76e80100to5q\" class=\"titName SG_txta\">zzSed学习笔记</h2>"},"content":{"text":"<div id=\"sina_keyword_ad_area2\" class=\"articalContent  \"> \n <h2>Sed学习笔记</h2> \n <div> \n  <div> \n   <h3><span>作者：Jims of <a href=\"http://www.ringkee.com/\" target=\"_top\">肥肥世家</a></span></h3> \n   <div> \n    <div> \n     <p><tt>&lt;<a href=\"mailto:jims.yang@gmail.com\">jims.yang@gmail.com</a>&gt;</tt></p> \n    </div> \n   </div> \n  </div> \n </div> \n <div> \n  <p>Copyright &copy; 2004，2005, 本文遵从GNU 的自由文档许可证(Free Document License)的条款，欢迎转载、修改、散布。</p> \n  <p> http://www.tsnc.edu.cn/default/tsnc_wgrj/doc/sed.htm<br /></p> \n </div> \n <div> \n  <p>发布时间:2004年09月20日</p> \n </div> \n <div> \n  <p>最近更新:2005年12月22日，增加小技巧章节。</p> \n </div> \n <hr /> \n <div> \n  <p><b>Table of Contents</b></p> \n  <dl> \n   <dt>\n    <span><a href=\"http://www.tsnc.edu.cn/default/tsnc_wgrj/doc/sed.htm#id2874786\">1. Sed简介</a></span>\n   </dt> \n   <dt>\n    <span><a href=\"http://www.tsnc.edu.cn/default/tsnc_wgrj/doc/sed.htm#id2875182\">2. 定址</a></span>\n   </dt> \n   <dt>\n    <span><a href=\"http://www.tsnc.edu.cn/default/tsnc_wgrj/doc/sed.htm#id2811706\">3. Sed命令</a></span>\n   </dt> \n   <dt>\n    <span><a href=\"http://www.tsnc.edu.cn/default/tsnc_wgrj/doc/sed.htm#id2810348\">4. 选项</a></span>\n   </dt> \n   <dt>\n    <span><a href=\"http://www.tsnc.edu.cn/default/tsnc_wgrj/doc/sed.htm#id2810450\">5. 元字符集</a></span>\n   </dt> \n   <dt>\n    <span><a href=\"http://www.tsnc.edu.cn/default/tsnc_wgrj/doc/sed.htm#id2861508\">6. 实例</a></span>\n   </dt> \n   <dt>\n    <span><a href=\"http://www.tsnc.edu.cn/default/tsnc_wgrj/doc/sed.htm#id2808415\">7. 脚本</a></span>\n   </dt> \n   <dt>\n    <span><a href=\"http://www.tsnc.edu.cn/default/tsnc_wgrj/doc/sed.htm#id2808439\">8. 小技巧</a></span>\n   </dt> \n  </dl> \n </div> \n <div lang=\"en\" xml:lang=\"en\"> \n  <div> \n   <div> \n    <div> \n     <h2 style=\"clear: both\"><a name=\"id2874786\"></a>1.&nbsp;<wbr />Sed简介</h2> \n    </div> \n   </div> \n  </div> \n  <p>sed 是一种在线编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”（pattern space），接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有 改变，除非你使用重定向存储输出。Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。以下介绍的是Gnu版本的Sed 3.02。</p> \n </div> \n <div lang=\"en\" xml:lang=\"en\"> \n  <div> \n   <div> \n    <div> \n     <h2 style=\"clear: both\"><a name=\"id2875182\"></a>2.&nbsp;<wbr />定址</h2> \n    </div> \n   </div> \n  </div> \n  <p> 可以通过定址来定位你所希望编辑的行，该地址用数字构成，用逗号分隔的两个行数表示以这两行为起止的行的范围（包括行数表示的那两行）。如1，3表示1，2，3行，美元符号($)表示最后一行。范围可以通过数据，正则表达式或者二者结合的方式确定 。</p> \n </div> \n <div lang=\"en\" xml:lang=\"en\"> \n  <div> \n   <div> \n    <div> \n     <h2 style=\"clear: both\"><a name=\"id2811706\"></a>3.&nbsp;<wbr />Sed命令</h2> \n    </div> \n   </div> \n  </div> \n  <p>调用sed命令有两种形式：</p> \n  <div> \n   <ul type=\"disc\"> \n    <li> <p>sed [options] 'command' file(s)</p> </li> \n    <li> <p>sed [options] -f scriptfile file(s)</p> </li> \n   </ul> \n  </div> \n  <div> \n   <dl> \n    <dt>\n     <span>a\\</span>\n    </dt> \n    <dd> \n     <p>在当前行后面加入一行文本。</p> \n    </dd> \n    <dt>\n     <span>b lable</span>\n    </dt> \n    <dd> \n     <p>分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。</p> \n    </dd> \n    <dt>\n     <span>c\\</span>\n    </dt> \n    <dd> \n     <p>用新的文本改变本行的文本。</p> \n    </dd> \n    <dt>\n     <span>d</span>\n    </dt> \n    <dd> \n     <p>从模板块（Pattern space）位置删除行。</p> \n    </dd> \n    <dt>\n     <span>D</span>\n    </dt> \n    <dd> \n     <p>删除模板块的第一行。</p> \n    </dd> \n    <dt>\n     <span>i\\</span>\n    </dt> \n    <dd> \n     <p>在当前行上面插入文本。</p> \n    </dd> \n    <dt>\n     <span>h</span>\n    </dt> \n    <dd> \n     <p>拷贝模板块的内容到内存中的缓冲区。</p> \n    </dd> \n    <dt>\n     <span>H</span>\n    </dt> \n    <dd> \n     <p>追加模板块的内容到内存中的缓冲区</p> \n    </dd> \n    <dt>\n     <span>g</span>\n    </dt> \n    <dd> \n     <p>获得内存缓冲区的内容，并替代当前模板块中的文本。</p> \n    </dd> \n    <dt>\n     <span>G</span>\n    </dt> \n    <dd> \n     <p>获得内存缓冲区的内容，并追加到当前模板块文本的后面。</p> \n    </dd> \n    <dt>\n     <span>l</span>\n    </dt> \n    <dd> \n     <p>列表不能打印字符的清单。</p> \n    </dd> \n    <dt>\n     <span>n</span>\n    </dt> \n    <dd> \n     <p>读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。</p> \n    </dd> \n    <dt>\n     <span>N</span>\n    </dt> \n    <dd> \n     <p>追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。</p> \n    </dd> \n    <dt>\n     <span>p</span>\n    </dt> \n    <dd> \n     <p>打印模板块的行。</p> \n    </dd> \n    <dt>\n     <span>P（大写）</span>\n    </dt> \n    <dd> \n     <p>打印模板块的第一行。</p> \n    </dd> \n    <dt>\n     <span>q</span>\n    </dt> \n    <dd> \n     <p>退出Sed。</p> \n    </dd> \n    <dt>\n     <span>r file</span>\n    </dt> \n    <dd> \n     <p>从file中读行。</p> \n    </dd> \n    <dt>\n     <span>t label</span>\n    </dt> \n    <dd> \n     <p>if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。</p> \n    </dd> \n    <dt>\n     <span>T label</span>\n    </dt> \n    <dd> \n     <p>错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。</p> \n    </dd> \n    <dt>\n     <span>w file</span>\n    </dt> \n    <dd> \n     <p>写并追加模板块到file末尾。</p> \n    </dd> \n    <dt>\n     <span>W file</span>\n    </dt> \n    <dd> \n     <p>写并追加模板块的第一行到file末尾。</p> \n    </dd> \n    <dt>\n     <span>!</span>\n    </dt> \n    <dd> \n     <p>表示后面的命令对所有没有被选定的行发生作用。</p> \n    </dd> \n    <dt>\n     <span>s/re/string</span>\n    </dt> \n    <dd> \n     <p>用string替换正则表达式re。</p> \n    </dd> \n    <dt>\n     <span>=</span>\n    </dt> \n    <dd> \n     <p>打印当前行号码。</p> \n    </dd> \n    <dt>\n     <span>#</span>\n    </dt> \n    <dd> \n     <p>把注释扩展到下一个换行符以前。</p> \n    </dd> \n    <dt>\n     <span>以下的是替换标记</span>\n    </dt> \n    <dd> \n     <div> \n      <ul type=\"disc\"> \n       <li> <p>g表示行内全面替换。</p> </li> \n       <li> <p>p表示打印行。</p> </li> \n       <li> <p>w表示把行写入一个文件。</p> </li> \n       <li> <p>x表示互换模板块中的文本和缓冲区中的文本。</p> </li> \n       <li> <p>y表示把一个字符翻译为另外的字符（但是不用于正则表达式）</p> </li> \n      </ul> \n     </div> \n    </dd> \n   </dl> \n  </div> \n </div> \n <div lang=\"en\" xml:lang=\"en\"> \n  <div> \n   <div> \n    <div> \n     <h2 style=\"clear: both\"><a name=\"id2810348\"></a>4.&nbsp;<wbr />选项</h2> \n    </div> \n   </div> \n  </div> \n  <div> \n   <dl> \n    <dt>\n     <span>-e command,</span> \n     <span>--expression=command</span>\n    </dt> \n    <dd> \n     <p>允许多台编辑。</p> \n    </dd> \n    <dt>\n     <span>-h, --help</span>\n    </dt> \n    <dd> \n     <p>打印帮助，并显示bug列表的地址。</p> \n    </dd> \n    <dt>\n     <span>-n, --quiet, --silent</span>\n    </dt> \n    <dd> \n     <p>取消默认输出。</p> \n    </dd> \n    <dt>\n     <span>-f, --filer=script-file</span>\n    </dt> \n    <dd> \n     <p>引导sed脚本文件名。</p> \n    </dd> \n    <dt>\n     <span>-V, --version</span>\n    </dt> \n    <dd> \n     <p>打印版本和版权信息。</p> \n    </dd> \n   </dl> \n  </div> \n </div> \n <div lang=\"en\" xml:lang=\"en\"> \n  <div> \n   <div> \n    <div> \n     <h2 style=\"clear: both\"><a name=\"id2810450\"></a>5.&nbsp;<wbr />元字符集</h2> \n    </div> \n   </div> \n  </div> \n  <div> \n   <dl> \n    <dt>\n     <span>^</span>\n    </dt> \n    <dd> \n     <p>锚定行的开始 如：/^sed/匹配所有以sed开头的行。</p> \n    </dd> \n    <dt>\n     <span>$</span>\n    </dt> \n    <dd> \n     <p>锚定行的结束 如：/sed$/匹配所有以sed结尾的行。</p> \n    </dd> \n    <dt>\n     <span>.</span>\n    </dt> \n    <dd> \n     <p>匹配一个非换行符的字符 如：/s.d/匹配s后接一个任意字符，然后是d。</p> \n    </dd> \n    <dt>\n     <span>*</span>\n    </dt> \n    <dd> \n     <p>匹配零或多个字符 如：，love这成**love**。</p> \n    </dd> \n    <dt>\n     <span>\\&lt;</span>\n    </dt> \n    <dd> \n     <p>锚定单词的开始，如:/\\&lt;love/匹配包含以love开头的单词的行。</p> \n    </dd> \n    <dt>\n     <span>\\&gt;</span>\n    </dt> \n    <dd> \n     <p>锚定单词的结束，如/love\\&gt;/匹配包含以love结尾的单词的行。</p> \n    </dd> \n    <dt>\n     <span>x\\{m\\}</span>\n    </dt> \n    <dd> \n     <p>重复字符x，m次，如：/0\\{5\\}/匹配包含5个o的行。</p> \n    </dd> \n    <dt>\n     <span>x\\{m,\\}</span>\n    </dt> \n    <dd> \n     <p>重复字符x,至少m次，如：/o\\{5,\\}/匹配至少有5个o的行。</p> \n    </dd> \n    <dt>\n     <span>x\\{m,n\\}</span>\n    </dt> \n    <dd> \n     <p>重复字符x，至少m次，不多于n次，如：/o\\{5,10\\}/匹配5--10个o的行。</p> \n    </dd> \n   </dl> \n  </div> \n </div> \n <div lang=\"en\" xml:lang=\"en\"> \n  <div> \n   <div> \n    <div> \n     <h2 style=\"clear: both\"><a name=\"id2861508\"></a>6.&nbsp;<wbr />实例</h2> \n    </div> \n   </div> \n  </div> \n  <div> \n   <dl> \n    <dt>\n     <span>删除：d命令</span>\n    </dt> \n    <dd> \n     <div> \n      <ul type=\"disc\"> \n       <li> <p>$ sed '2d' example-----删除example文件的第二行。</p> </li> \n       <li> <p>$ sed '2,$d' example-----删除example文件的第二行到末尾所有行。</p> </li> \n       <li> <p>$ sed '$d' example-----删除example文件的最后一行。</p> </li> \n       <li> <p>$ sed '/test/'d example-----删除example文件所有包含test的行。</p> </li> \n      </ul> \n     </div> \n    </dd> \n    <dt>\n     <span>替换：s命令</span>\n    </dt> \n    <dd> \n     <div> \n      <ul type=\"disc\"> \n       <li> <p>$ sed 's/test/mytest/g' example-----在整行范围内把test替换为mytest。如果没有g标记，则只有每行第一个匹配的test被替换成mytest。</p> </li> \n       <li> <p>$ sed -n 's/^test/mytest/p' example-----(-n)选项和p标志一起使用表示只打印那些发生替换的行。也就是说，如果某一行开头的test被替换成mytest，就打印它。</p> </li> \n       <li> <p>$ sed 's/^192.168.0.1/&amp;localhost/' example-----&amp;符号表示替换换字符串中被找到的部份。所有以192.168.0.1开头的行都会被替换成它自已加 localhost，变成192.168.0.1localhost。</p> </li> \n       <li> <p>$ sed -n 's/\\(love\\)able/\\1rs/p' example-----love被标记为1，所有loveable会被替换成lovers，而且替换的行会被打印出来。</p> </li> \n       <li> <p>$ sed 's#10#100#g' example-----不论什么字符，紧跟着s命令的都被认为是新的分隔符，所以，“#”在这里是分隔符，代替了默认的“/”分隔符。表示把所有10替换成100。</p> </li> \n      </ul> \n     </div> \n    </dd> \n    <dt>\n     <span>选定行的范围：逗号</span>\n    </dt> \n    <dd> \n     <div> \n      <ul type=\"disc\"> \n       <li> <p>$ sed -n '/test/,/check/p' example-----所有在模板test和check所确定的范围内的行都被打印。</p> </li> \n       <li> <p>$ sed -n '5,/^test/p' example-----打印从第五行开始到第一个包含以test开始的行之间的所有行。</p> </li> \n       <li> <p>$ sed '/test/,/check/s/$/sed test/' example-----对于模板test和west之间的行，每行的末尾用字符串sed test替换。</p> </li> \n      </ul> \n     </div> \n    </dd> \n    <dt>\n     <span>多点编辑：e命令</span>\n    </dt> \n    <dd> \n     <div> \n      <ul type=\"disc\"> \n       <li> <p>$ sed -e '1,5d' -e 's/test/check/' example-----(-e)选项允许在同一行里执行多条命令。如例子所示，第一条命令删除1至5行，第二条命令用check替换test。命令的执 行顺序对结果有影响。如果两个命令都是替换命令，那么第一个替换命令将影响第二个替换命令的结果。</p> </li> \n       <li> <p>$ sed --expression='s/test/check/' --expression='/love/d' example-----一个比-e更好的命令是--expression。它能给sed表达式赋值。</p> </li> \n      </ul> \n     </div> \n    </dd> \n    <dt>\n     <span>从文件读入：r命令</span>\n    </dt> \n    <dd> \n     <div> \n      <ul type=\"disc\"> \n       <li> <p>$ sed '/test/r file' example-----file里的内容被读进来，显示在与test匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面。</p> </li> \n      </ul> \n     </div> \n    </dd> \n    <dt>\n     <span>写入文件：w命令</span>\n    </dt> \n    <dd> \n     <div> \n      <ul type=\"disc\"> \n       <li> <p>$ sed -n '/test/w file' example-----在example中所有包含test的行都被写入file里。</p> </li> \n      </ul> \n     </div> \n    </dd> \n    <dt>\n     <span>追加命令：a命令</span>\n    </dt> \n    <dd> \n     <div> \n      <ul type=\"disc\"> \n       <li> <p>$ sed '/^test/a\\\\---&gt;this is a example' example&lt;-----'this is a example'被追加到以test开头的行后面，sed要求命令a后面有一个反斜杠。</p> </li> \n      </ul> \n     </div> \n    </dd> \n    <dt>\n     <span>插入：i命令</span>\n    </dt> \n    <dd> \n     <p>$ sed '/test/i\\\\</p> \n     <p>new line</p> \n     <p>-------------------------' example</p> \n     <p>如果test被匹配，则把反斜杠后面的文本插入到匹配行的前面。</p> \n    </dd> \n    <dt>\n     <span>下一个：n命令</span>\n    </dt> \n    <dd> \n     <div> \n      <ul type=\"disc\"> \n       <li> <p>$ sed '/test/{ n; s/aa/bb/; }' example-----如果test被匹配，则移动到匹配行的下一行，替换这一行的aa，变为bb，并打印该行，然后继续。</p> </li> \n      </ul> \n     </div> \n    </dd> \n    <dt>\n     <span>变形：y命令</span>\n    </dt> \n    <dd> \n     <div> \n      <ul type=\"disc\"> \n       <li> <p>$ sed '1,10y/abcde/ABCDE/' example-----把1--10行内所有abcde转变为大写，注意，正则表达式元字符不能使用这个命令。</p> </li> \n      </ul> \n     </div> \n    </dd> \n    <dt>\n     <span>退出：q命令</span>\n    </dt> \n    <dd> \n     <div> \n      <ul type=\"disc\"> \n       <li> <p>$ sed '10q' example-----打印完第10行后，退出sed。</p> </li> \n      </ul> \n     </div> \n    </dd> \n    <dt>\n     <span>保持和获取：h命令和G命令</span>\n    </dt> \n    <dd> \n     <div> \n      <ul type=\"disc\"> \n       <li> <p>$ sed -e '/test/h' -e '$G example-----在sed处理文件的时候，每一行都被保存在一个叫模式空间的临时缓冲区中，除非行被删除或者输出被取消，否则所有被处理的行都将 打印在屏幕上。接着模式空间被清空，并存入新的一行等待处理。在这个例子里，匹配test的行被找到后，将存入模式空间，h命令将其复制并存入一个称为保 持缓存区的特殊缓冲区内。第二条语句的意思是，当到达最后一行后，G命令取出保持缓冲区的行，然后把它放回模式空间中，且追加到现在已经存在于模式空间中 的行的末尾。在这个例子中就是追加到最后一行。简单来说，任何包含test的行都被复制并追加到该文件的末尾。</p> </li> \n      </ul> \n     </div> \n    </dd> \n    <dt>\n     <span>保持和互换：h命令和x命令</span>\n    </dt> \n    <dd> \n     <div> \n      <ul type=\"disc\"> \n       <li> <p>$ sed -e '/test/h' -e '/check/x' example -----互换模式空间和保持缓冲区的内容。也就是把包含test与check的行互换。</p> </li> \n      </ul> \n     </div> \n    </dd> \n   </dl> \n  </div> \n </div> \n <div lang=\"en\" xml:lang=\"en\"> \n  <div> \n   <div> \n    <div> \n     <h2 style=\"clear: both\"><a name=\"id2808415\"></a>7.&nbsp;<wbr />脚本</h2> \n    </div> \n   </div> \n  </div> \n  <p> Sed脚本是一个sed的命令清单，启动Sed时以-f选项引导脚本文件名。Sed对于脚本中输入的命令非常挑剔，在命令的末尾不能有任何空白或文本，如果在一行中有多个命令，要用分号分隔。以#开头的行为注释行，且不能跨行。</p> \n </div> \n <div lang=\"en\" xml:lang=\"en\"> \n  <div> \n   <div> \n    <div> \n     <h2 style=\"clear: both\"><a name=\"id2808439\"></a>8.&nbsp;<wbr />小技巧</h2> \n    </div> \n   </div> \n  </div> \n  <div> \n   <ul type=\"disc\"> \n    <li> <p> 在sed的命令行中引用shell变量时要使用双引号，而不是通常所用的单引号。下面是一个根据name变量的内容来删除named.conf文件中zone段的脚本：</p> <pre>\nname='zone\\ &quot;localhost&quot;'\nsed &quot;/$name/,/};/d&quot; named.conf \n</pre></li> \n   </ul> \n  </div> \n </div> \n</div>"},"date":{"text":"2011-10-08 21:08:07"}}