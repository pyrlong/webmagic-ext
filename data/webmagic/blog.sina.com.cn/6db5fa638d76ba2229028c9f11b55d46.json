{"title":{"text":"<h2 id=\"t_58ae76e80100m4rt\" class=\"titName SG_txta\">Java&nbsp;Core学习手记--Class&nbsp;loader和Class对象</h2>"},"content":{"text":"<div id=\"sina_keyword_ad_area2\" class=\"articalContent  \">\n  &nbsp;\n <wbr />&nbsp;\n <wbr /> ClassLoader将类文件加载如JVM，而加载到JVM中的就是Class对象！ClassLoader分为4种：\n <br /> &nbsp;\n <wbr />&nbsp;\n <wbr /> Bootstrap:加载本地类，例如String。\n <br /> &nbsp;\n <wbr />&nbsp;\n <wbr /> Extension:加载jre/lib/ext中的类。\n <br /> &nbsp;\n <wbr />&nbsp;\n <wbr /> System:加载CLASSPATH中的类。\n <br /> &nbsp;\n <wbr />&nbsp;\n <wbr /> Plugin:加载plugin.jar中的类，如mysql jdbc。\n <br /> &nbsp;\n <wbr />&nbsp;\n <wbr /> 所有Class对象都有getClassLoader方法，其中有些本地类会返回null，如：数组类、字符串类。每个ClassLoader会对应一个名空间，即不同ClassLoader加载的同一个类会有不同的名空间。\n <br /> &nbsp;\n <wbr />&nbsp;\n <wbr /> 加载类有2种方法，一种是Class.forName(&quot;className&quot;);一种是classLoader.loadClass()。\n <br /> &nbsp;\n <wbr />&nbsp;\n <wbr /> ClassLoader会验证字节码的正确性（有校验位保证字节码未被修改）。\n <br /> &nbsp;\n <wbr />&nbsp;\n <wbr /> 可以自己定制ClassLoader，继承java.lang.ClassLoader类即可。自己定制ClassLoader需要重写\n <span style=\"font-weight: bold;\">findClass</span>方法，它指定从哪里读取类的字节码。在findClass中需要调用defineClass(name,classBytes,0,classBytes)将字节码编译成Class对象。\n <br /> PS:\n <span style=\"font-weight: bold;\">Godel定理：</span>无法设计一个算法，对一个输入的程序，判断其是否符合某个特性(例如：是否堆栈溢出)。\n <br /> \n</div>"},"date":{"text":"2010-11-02 16:08:19"}}